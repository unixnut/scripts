#! /bin/sh
# psff (Bourne shell script) -- similar to `ps f -eFww` but with virtual memory size and wide columns
#
# Doesn't use $PAGER because more(1) doesn't support the -S option and it's
# needed to stop less(1) wrapping lines
#
# TO-DO:
#   - Date & time in less(1) prompt

ps f -eww -o user:12,pid,ppid,c,vsz:9,sz:8,rss:7,psr,stime,tty,stat,time,cmd |
  python3 -c 'import re, sys

ZERO_RE = re.compile(r"\b0\b")
LINE_RE = re.compile(r"((?:\S+\s+){4})(\S+)(\s+\S+)(\s+\S+)(.*)")


def tweak(s, n=0):
    if not s:
        return 0, ""
    else:
        count, s_prime = tweak(s[1:], n+1)
        # Odd modulo 3
        if int(count / 3) % 2 == 0 and s[0] != " ":
            return count + 1, s[0] + "\b_" + s_prime
        else:
            return count + 1, s[0] + s_prime


def colorise(s):
    """Colorise integer values using underlines."""

    if not ZERO_RE.search(s):
        length, string = tweak(s)
        return string
    else:
        return s


for line in sys.stdin:
    m = LINE_RE.match(line)
    matches = m.groups()
    if matches[1] != "VSZ":
        print(matches[0] + colorise(matches[1]) + colorise(matches[2]) + colorise(matches[3]) + matches[4])
    else:
        print(line, end="")
' |
  less -S
